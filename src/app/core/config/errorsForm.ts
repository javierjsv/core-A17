export const formErrMsg = {
  required: { type: 'required', message: 'ERRS_FORM.REQUIRED_FIELD' },
  requiredOperations: { type: 'required', message: 'ERRS_FORM.REQUIRED_OPERATIONS' },
  emptyOperations: { type: 'emptyOperations', message: 'ERRS_FORM.REQUIRED_OPERATIONS' },
  minLengthEight: { type: 'minlength', message: 'ERRS_FORM.MIN_LENGTH_EIGHT' },
  patternEmail: { type: 'pattern', message: 'ERRS_FORM.PATTER_EMAIL' },
  patternNunLetters: { type: 'pattern', message: 'ERRS_FORM.PATTER_NUM_LETTERS' },
  dontMatchPassword: { type: 'dontMatchPassword', message: 'ERRS_FORM.PASSWORD_NOT_MATCH' },
  maxLength6: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_6' },
  maxLength8: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_8' },
  maxLength8V2: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_8V2' },
  maxLength45: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_45' },
  maxLength20: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_20' },
  maxLength50: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_50' },
  maxLength12: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_12' },
  maxLength15: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_15' },
  maxLength25: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_25' },
  maxLength255: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_255' },
  maxLength250: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_250' },
  maxLength30: { type: 'maxlength', message: 'ERRS_FORM.MAX_LENGTH_30' },
  codeValidationAuction: { type: 'mask', message: 'ERRS_FORM.INVALID_CODE_AUCTION' },
  lessThan01: { type: 'lessThan', message: 'ERRS_FORM.LESS_THAN_01' },
  lessThan0: { type: 'lessThan0', message: 'ERRS_FORM.LESS_THAN_0' },
  percentageBetween0And100: { type: 'percentageBetween0And100', message: 'ERRS_FORM.PERCENTAGE_BETWEEN_0_100' },
  hasSpecialCharacters: { type: 'dontHasSpecialCharacters', message: 'ERRS_FORM.PASSWORD_HAS_SPECIAL_CHARACTERS' },
  hasNumbers: { type: 'dontHasNumbers', message: 'ERRS_FORM.PASSWORD_HAS_NUMBERS' },
  hasLetterUppercase: { type: 'dontHasLetterUppercase', message: 'ERRS_FORM.PASSWORD_HAS_LETTER_UPPERCASE' },
  hasLetterLowercase: { type: 'dontHasLetterLowercase', message: 'ERRS_FORM.PASSWORD_HAS_LETTER_LOWERCASE' },
  email: { type: 'email', message: 'ERRS_FORM.EMAIL' },
  emailAlreadyExist: { type: 'emailAlreadyExist', message: 'ERRS_FORM.EMAIL_ALREADY_EXIST' }
};
